import{_ as r}from"./chunks/Try.DyNpYwmX.js";import{B as d,o as h,c as k,j as a,a as t,G as i,w as n,ae as m,t as o,k as p}from"./chunks/framework.CCmhkGTA.js";import"./chunks/index.Ctuo7IKN.js";import"./chunks/index.eQmIA9o-.js";import"./chunks/Col.BWEnWL0F.js";import"./chunks/Try.vue_vue_type_style_index_0_lang.CD-yO4GS.js";const u={style:{color:"#1677ff"}},g={class:"warning custom-block"},c={style:{color:"#1677ff"}},E={style:{color:"#1677ff"}},F=JSON.parse('{"title":"网页封面","description":"","frontmatter":{},"headers":[],"relativePath":"doc/share-image.md","filePath":"doc/share-image.md"}'),_={name:"doc/share-image.md"},N=Object.assign(_,{setup(f){let e=window.location.origin;return(y,s)=>{const l=d("ClientOnly");return h(),k("div",null,[s[5]||(s[5]=a("h1",{id:"网页封面",tabindex:"-1"},[t("网页封面 "),a("a",{class:"header-anchor",href:"#网页封面","aria-label":'Permalink to "网页封面"'},"​")],-1)),s[6]||(s[6]=a("p",null,[t("对于常见的图片分享，如果图片是按不同用户动态生成的，生成方式有常见的一些库，比如"),a("code",null,"html2canvas"),t(",但是这个库对 css 的支持并不完整。如果把这些 dom 数据直接给浏览器进行渲染然后再截图，会更加的准确。可以传递下面的 html 内容。")],-1)),i(l,null,{default:n(()=>[i(r,{html:"<h1>Hello, world!</h1>",format:"png"})]),_:1}),a("p",null,[s[0]||(s[0]=t("当然我们还提供一个库进行更方便的截图方案。 项目先引入一个 Kaca 的 js 截图库，资源地址 ")),i(l,null,{default:n(()=>[a("span",u,o(p(e))+"/kaca/snapshot.js",1)]),_:1})]),s[7]||(s[7]=a("p",null,"然后可以在 js 中调用下面的代码进行截图",-1)),a("div",g,[s[2]||(s[2]=a("p",{class:"custom-block-title"},"WARNING",-1)),a("p",null,[s[1]||(s[1]=t("注意：截图服务地址是 ")),i(l,null,{default:n(()=>[a("span",c,o(p(e)),1)]),_:1})])]),s[8]||(s[8]=m("",1)),a("p",null,[s[3]||(s[3]=t("这个代码会对引入 ")),i(l,null,{default:n(()=>[a("span",E,o(p(e))+"/kaca/snapshot.js",1)]),_:1}),s[4]||(s[4]=t(" 资源的页面进行截图 ，最终会下载一个图片文件。"))])])}}});export{F as __pageData,N as default};
