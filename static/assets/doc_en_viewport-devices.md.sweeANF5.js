import{_ as i}from"./chunks/DevicesList.BM10UIFO.js";import{B as a,o as s,c,ae as n,G as t,w as r}from"./chunks/framework.CCmhkGTA.js";import"./chunks/index.BI579x9g.js";import"./chunks/index.Ctuo7IKN.js";import"./chunks/index.eQmIA9o-.js";import"./chunks/index.CeVZZ3NP.js";const f=JSON.parse('{"title":"Devices","description":"","frontmatter":{},"headers":[],"relativePath":"doc/en/viewport-devices.md","filePath":"doc/en/viewport-devices.md"}'),p={name:"doc/en/viewport-devices.md"},g=Object.assign(p,{setup(d){return(l,e)=>{const o=a("ClientOnly");return s(),c("div",null,[e[0]||(e[0]=n('<h1 id="devices" tabindex="-1">Devices <a class="header-anchor" href="#devices" aria-label="Permalink to &quot;Devices&quot;">â€‹</a></h1><p>Instead of manually specifying viewport parameters like width and height, you can specify a device to use for emulation. In addition, other parameters of the viewport, including the user agent, will be set automatically.</p><p>The viewport_device option sets the next options for you: viewport_width, viewport_height, device_scale_factor, viewport_mobile, viewport_has_touch, viewport_landscape. You can change these options and override the ones set by the viewport_device option.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>API does not use an actual device to take a screenshot. It is emulation that works in most cases.</p></div><p>Use the id property of the device as the viewport_device option, e.g. viewport_device=<code>galaxy_s9+_landscape</code>.</p><p>You can get the list of supported devices by:</p>',6)),t(o,null,{default:r(()=>[t(i)]),_:1})])}}});export{f as __pageData,g as default};
